package com.verify;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.http.*;
import org.springframework.web.client.RestTemplate;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CorrectAoneConsignmentDataCaller {
    private static List<String> trackingIds = List.of(

            "AJA100003066251",
            "AJA100003057451",
            "AJA100003057460",
            "AJA100003057502",
            "AJA100003057504",
            "AJA100003057513",
            "AJA100003057848",
            "AJA100003058003",
            "AJA100003058428",
            "AJA100003058425",
            "AJA100003058849",
            "AJA100003058869",
            "AJA100003059481",
            "AJA100003059485",
            "AJA100003059678",
            "AJA100003060126",
            "AJA100003060137",
            "AJA100003060146",
            "AJA100003060562",
            "AJA100003060568",
            "AJA100003060573",
            "AJA100003060575",
            "AJA100003060760",
            "AJA100003062063",
            "AJA100003062118",
            "AJA100003068059",
            "AJA100003068183",
            "AJA100003068360",
            "AJA100003068637",
            "AJA100003068956",
            "AJA100003068989",
            "AJA100003069032",
            "AJA100003069060",
            "AJA100003069486",
            "AJA100003069709",
            "AJA100003069748",
            "AJA100003069976",
            "AJA100003070060",
            "AJA100003057466",
            "AJA100003060131",
            "AJA100003067857",
            "AJA100003069769",
            "AJA100003053450",
            "AJA100003054986",
            "AJA100003051580",
            "AJA100003057508",
            "AJA100003057778",
            "AJA100003058326",
            "AJA100003058844",
            "AJA100003038399",
            "AJA100003053621",
            "AJA100003057505",
            "AJA100003057903",
            "AJA100003069903",
            "AJA100003057464",
            "AJA100003057467",
            "AJA100003057468",
            "AJA100003057507",
            "AJA100003057512",
            "AJA100003057515",
            "AJA100003057740",
            "AJA100003057845",
            "AJA100003057846",
            "AJA100003057850",
            "AJA100003057904",
            "AJA100003058006",
            "AJA100003058047",
            "AJA100003058051",
            "AJA100003058483",
            "AJA100003058854",
            "AJA100003058858",
            "AJA100003060125",
            "AJA100003060127",
            "AJA100003060138",
            "AJA100003060141",
            "AJA100003060522",
            "AJA100003060558",
            "AJA100003060570",
            "AJA100003060567",
            "AJA100003060576",
            "AJA100003060676",
            "AJA100003060758",
            "AJA100003062117",
            "AJA100003062211",
            "AJA100003062276",
            "AJA100003067568",
            "AJA100003067983",
            "AJA100003068200",
            "AJA100003069347",
            "AJA100003069416",
            "AJA100003069541",
            "AJA100003069647",
            "AJA100003069684",
            "AJA100003069697",
            "AJA100003070074",
            "AJA100003060119",
            "AJA100003060572",
            "AJA100003060675",
            "AJA100003068313",
            "AJA100003068780",
            "AJA100003049538",
            "AJA100003050123",
            "AJA100003060291",
            "AJA100003057452",
            "AJA100003057514",
            "AJA100003057742",
            "AJA100003058050",
            "AJA100003058329",
            "AJA100003058485",
            "AJA100003060140",
            "AJA100003060564",
            "AJA100003039946",
            "AJA100003048453",
            "AJA100003055804",
            "AJA100003059883",
            "AJA100003059992",
            "AJA100003057449",
            "AJA100003057448",
            "AJA100003057450",
            "AJA100003057453",
            "AJA100003057454",
            "AJA100003057456",
            "AJA100003057457",
            "AJA100003057461",
            "AJA100003057459",
            "AJA100003057458",
            "AJA100003057455",
            "AJA100003057462",
            "AJA100003057463",
            "AJA100003057465",
            "AJA100003057501",
            "AJA100003057503",
            "AJA100003057506",
            "AJA100003057511",
            "AJA100003057510",
            "AJA100003057509",
            "AJA100003057516",
            "AJA100003057678",
            "AJA100003057679",
            "AJA100003057680",
            "AJA100003057683",
            "AJA100003057681",
            "AJA100003057684",
            "AJA100003057685",
            "AJA100003057687",
            "AJA100003057688",
            "AJA100003057686",
            "AJA100003057739",
            "AJA100003057741",
            "AJA100003057743",
            "AJA100003057744",
            "AJA100003057745",
            "AJA100003057746",
            "AJA100003057748",
            "AJA100003057774",
            "AJA100003057775",
            "AJA100003057776",
            "AJA100003057777",
            "AJA100003057779",
            "AJA100003057780",
            "AJA100003057781",
            "AJA100003057782",
            "AJA100003057844",
            "AJA100003057847",
            "AJA100003057849",
            "AJA100003057851",
            "AJA100003057852",
            "AJA100003057902",
            "AJA100003057905",
            "AJA100003057906",
            "AJA100003057910",
            "AJA100003057911",
            "AJA100003057917",
            "AJA100003058004",
            "AJA100003058005",
            "AJA100003058007",
            "AJA100003058008",
            "AJA100003058048",
            "AJA100003058049",
            "AJA100003058052",
            "AJA100003058325",
            "AJA100003058327",
            "AJA100003058330",
            "AJA100003058331",
            "AJA100003058424",
            "AJA100003058426",
            "AJA100003058427",
            "AJA100003058482",
            "AJA100003058484",
            "AJA100003058845",
            "AJA100003058847",
            "AJA100003058848",
            "AJA100003058853",
            "AJA100003058855",
            "AJA100003058856",
            "AJA100003058857",
            "AJA100003058859",
            "AJA100003058870",
            "AJA100003058871",
            "AJA100003058872",
            "AJA100003058905",
            "AJA100003058906",
            "AJA100003059479",
            "AJA100003059480",
            "AJA100003059482",
            "AJA100003059676",
            "AJA100003059679",
            "AJA100003060120",
            "AJA100003060124",
            "AJA100003060130",
            "AJA100003060123",
            "AJA100003060122",
            "AJA100003060133",
            "AJA100003060132",
            "AJA100003060134",
            "AJA100003060136",
            "AJA100003060139",
            "AJA100003060145",
            "AJA100003060148",
            "AJA100003060151",
            "AJA100003060521",
            "AJA100003060557",
            "AJA100003060559",
            "AJA100003060560",
            "AJA100003060565",
            "AJA100003060561",
            "AJA100003060566",
            "AJA100003060569",
            "AJA100003060563",
            "AJA100003060571",
            "AJA100003060574",
            "AJA100003060577",
            "AJA100003060578",
            "AJA100003060579",
            "AJA100003060580",
            "AJA100003060581",
            "AJA100003060582",
            "AJA100003060667",
            "AJA100003060668",
            "AJA100003060669",
            "AJA100003060670",
            "AJA100003060671",
            "AJA100003060672",
            "AJA100003060673",
            "AJA100003060674",
            "AJA100003060678",
            "AJA100003060756",
            "AJA100003060757",
            "AJA100003060759",
            "AJA100003060785",
            "AJA100003060786",
            "AJA100003060788",
            "AJA100003060789",
            "AJA100003060787",
            "AJA100003060892",
            "AJA100003060893",
            "AJA100003060896",
            "AJA100003060895",
            "AJA100003062024",
            "AJA100003062061",
            "AJA100003062062",
            "AJA100003062210",
            "AJA100003062212",
            "AJA100003062213",
            "AJA100003062277",
            "AJA100003063662",
            "AJA100003066827",
            "AJA100003067044",
            "AJA100003067421",
            "AJA100003067715",
            "AJA100003067748",
            "AJA100003067761",
            "AJA100003067781",
            "AJA100003067794",
            "AJA100003067811",
            "AJA100003067837",
            "AJA100003067889",
            "AJA100003067911",
            "AJA100003067937",
            "AJA100003067960",
            "AJA100003068018",
            "AJA100003068090",
            "AJA100003068107",
            "AJA100003068148",
            "AJA100003068222",
            "AJA100003068242",
            "AJA100003068344",
            "AJA100003068437",
            "AJA100003068455",
            "AJA100003068482",
            "AJA100003068501",
            "AJA100003068571",
            "AJA100003068609",
            "AJA100003068664",
            "AJA100003068694",
            "AJA100003068707",
            "AJA100003068740",
            "AJA100003068756",
            "AJA100003068979",
            "AJA100003069016",
            "AJA100003069212",
            "AJA100003069235",
            "AJA100003069291",
            "AJA100003069320",
            "AJA100003069377",
            "AJA100003069400",
            "AJA100003069441",
            "AJA100003069463",
            "AJA100003069664",
            "AJA100003069757",
            "AJA100003069782",
            "AJA100003069796",
            "AJA100003069825",
            "AJA100003069855",
            "AJA100003069872",
            "AJA100003069951",
            "AJA100003070012",
            "AJA100003070035",
            "AJA100003070046",
            "AJA100003070080",
            "AJA100003000898",
            "AJA100003036688",
            "AJA100003037048",
            "AJA100003038030",
            "AJA100003040625",
            "AJA100003042435",
            "AJA100003044111",
            "AJA100003045482",
            "AJA100003046277",
            "AJA100003046734",
            "AJA100003047890",
            "AJA100003048240",
            "AJA100003049733",
            "AJA100003050051",
            "AJA100003051584",
            "AJA100003053722",
            "AJA100003053809",
            "AJA100003055162",
            "AJA100003057152",
            "AJA100003057214",
            "AJA100003058136",
            "AJA100003058143",
            "AJA100003058144",
            "AJA100003058146",
            "AJA100003058147",
            "AJA100003058318",
            "AJA100003058461",
            "AJA100003058470",
            "AJA100003061118",
            "AJA100003061123",
            "AJA100003061128",
            "AJA100003061159",
            "AJA100003063365",
            "AJA100003066454",
            "AJA100003067148",
            "AJA100003067247",
            "AJA100003067248",
            "AJA100003067251"
    );

    private static final String BEARER_TOKEN = "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJnQWlSMDYyeUZVeGRZV0paVFpxNGRPaHU5MjMybUJQTEQzelFOckhJRlZrIn0.eyJleHAiOjE3NTI0MTI5MTIsImlhdCI6MTc1MjMyNjUxMiwiYXV0aF90aW1lIjoxNzUyMzI2NTExLCJqdGkiOiI4MjllNGFjZC1iNDkyLTRkZTctOTJiNS03NzgxZDRkOWQxODAiLCJpc3MiOiJodHRwczovL2F1dGguYWotZXguY29tL3JlYWxtcy9hb25lIiwiYXVkIjoiYWNjb3VudCIsInN1YiI6IjQ0YzBlNDQzLTFkMDEtNDE3YS1hOWY3LTkxNTgzNDVlNGU3YSIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFvbmUtcG9ydGFsIiwic2Vzc2lvbl9zdGF0ZSI6ImEwMGRjNWNlLTUxZDUtNDQ3ZS1iYmQ0LWFiNjQzNGI1MGFkNyIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cHM6Ly9hb25lLmFqLWV4LmNvbSJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiQU9ORV9BU1NFVFNfVkVISUNMRVMucmVhZCIsIkFPTkVfT1BTX1NPUlRJTkdfTUFDSElORV9TQ0FOUy5yZWFkIiwiQU9ORV9JQU1fVVNFUlMud3JpdGUiLCJBT05FX0hBSl9DT05TSUdOTUVOVFMucHJpbnQiLCJBT05FX1RISVJELVBBUlRZX1NDQU5TLndyaXRlIiwiQU9ORV9DT05TSUdOTUVOVFNfQ09OU0lHTk1FTlQuc2Vuc2l0aXZlIiwiQU9ORV9USElSRC1QQVJUWV9DT05GSUdTX1RISVJELVBBUlRZLnJlYWQiLCJBT05FX09QU19TT1JUSU5HX01BQ0hJTkVfQUdFTlRTLmFkbWluIiwiQU9ORV9JQU0ucmVhZCIsIkFPTkVfQ09OU0lHTk1FTlRTX0NPTlNJR05NRU5ULmNyZWF0ZSIsIkFPTkVfUkVQT1JUUy5yZWFkIiwiQU9ORV9PUFNfUElDS1VQLVJFUVVFU1QucmVhZCIsIkFPTkVfTU1fU09SVElORy1NQUNISU5FX0FHRU5ULndyaXRlIiwiQU9ORV9PUFNfQ09OU0lHTk1FTlRTLnJlYWQiLCJBT05FX0NSTV9DVVNUT01FUlMucmVhZCIsIkFPTkVfU0VUVElOR1NfUkVTT1VSQ0VTLmFkbWluIiwidW1hX2F1dGhvcml6YXRpb24iLCJBT05FX09QU19EUklWRVJTLndyaXRlIiwiQU9ORV9DUk1fRU1QTE9ZRUVTLmFkbWluIiwiQU9ORV9PUFNfTEFTVC1NSUxFLndyaXRlIiwiQU9ORV9NQVNURVJTLndyaXRlIiwiQU9ORV9NTV9TT1JUSU5HLU1BQ0hJTkVfU0NBTlMud3JpdGUiLCJBT05FX01NX0JBR1MucmVhZCIsIkFPTkVfT1BTX1dFSUdISU5HLmFkbWluIiwiQU9ORV9PUFNfRFJJVkVSUy5zZW5zaXRpdmUiLCJBT05FX09QU19MQVNULU1JTEVfREVMSVZFUlktUEVSRk9STUFOQ0UucmVhZCIsIkFPTkVfTk9USUZJQ0FUSU9OU19TTVNfSElTVE9SWS5hZG1pbiIsIkFPTkVfT1BTX1JUTy5yZWFkIiwiQU9ORV9PUFNfQ09OU0lHTk1FTlRTLnJldm9rZV9kYW1hZ2VkIiwiQU9ORV9BU1NFVFNfSFVCUy5yZWFkIiwiQU9ORV9PUFNfQ09OU0lHTk1FTlRTLnJldm9rZV9ydG8iLCJBT05FX0NSTV9FTVBMT1lFRVNfVVNFUl9NQU5BR0VNRU5ULndyaXRlIiwiQU9ORV9PUFNfQ09VUklFUlMuYWRtaW4iLCJBT05FX05PVElGSUNBVElPTlNfU01TX0hJU1RPUlkucmVhZCIsIkFPTkVfQ09ORklHU19DVVJSRU5DWS5yZWFkIiwiQU9ORV9DUk1fRU1QTE9ZRUVTX0FDQ09VTlRTLnNlbnNpdGl2ZSIsIkFPTkVfT1BTX1JFQVNPTlNfSE9MRC5hZG1pbiIsIkFPTkVfT1BTX0NPTlNJR05NRU5UUy5wcmludCIsIkFPTkVfT1BTX0NPTlNJR05NRU5UUy5yZXZva2VfZGlzcG9zZWQiLCJkZWZhdWx0LXJvbGVzLWFvbmUiLCJBT05FX0NSTV9DVVNUT01FUlMud3JpdGUiLCJBT05FX09QU19TT1JUSU5HX01BQ0hJTkVfQ09ORklHUy5hZG1pbiIsIkFPTkVfTU1fU09SVElORy1NQUNISU5FLmFkbWluIiwiQU9ORV9PUFNfUkVBU09OU19ORFIuYWRtaW4iLCJBT05FX01BU1RFUlMucmVhZCIsIkFPTkVfT1BTX0NPTlNJR05NRU5UU19ERUxJVkVSWS50YXNrcyIsIkFPTkVfRklOQU5DRV9SRVZFTlVFLmFkbWluIiwiQU9ORV9DT05TSUdOTUVOVFNfQ09OU0lHTk1FTlQucmVhZCIsIkFPTkVfQ09OU0lHTk1FTlRTX0NPTlNJR05NRU5ULmVkaXRfZGVzdGluYXRpb25fYWRkcmVzcyIsIkFPTkVfTU1fU09SVElORy1NQUNISU5FLndyaXRlIiwiQU9ORV9DUk1fQ1VTVE9NRVJTX0JPT0tJTkctU0VUVElOR1Mud3JpdGUiLCJBT05FX0ZJTkFOQ0UuYWRtaW4iLCJBT05FX09QU19SRUFTT05TX05QUi5hZG1pbiIsIkFPTkVfT1BTX1NPUlRJTkctTUFDSElORV9DT05GSUdTLmFkbWluIiwiQU9ORV9JQU0uYWRtaW4iLCJBT05FX09QU19EUklWRVJTLmFkbWluIiwiQU9ORV9PUFMucmVhZCIsIkFPTkVfTU1fQkFHUy5hZG1pbiIsIkFPTkVfVEhJUkQtUEFSVFkucmVhZCIsIkFPTkVfSEFKX0NPTlNJR05NRU5UUy53cml0ZSIsIkFPTkVfTU1fU09SVElORy1NQUNISU5FX0NPTkZJR1MuYWRtaW4iLCJBT05FX0NTX0NPTVBMQUlOVC5hZG1pbiIsIkFPTkVfTk9USUZJQ0FUSU9OU19TTVNfVEVNUExBVEVTLmFkbWluIiwiQU9ORV9GSU5BTkNFX0lOVk9JQ0UuYWRtaW4iLCJBT05FX0NPTkZJR1MucmVhZCIsIkFPTkVfQVNTRVRTX0hVQlMud3JpdGUiLCJvZmZsaW5lX2FjY2VzcyIsIkFPTkVfQ1JNX0VNUExPWUVFUy5yZWFkIiwiQU9ORV9BU1NFVFNfVkVISUNMRVMud3JpdGUiLCJBT05FX01NX0JBR1NfQkFHLndyaXRlIiwiQU9ORV9DT05TSUdOTUVOVFNfQ1VTVE9NRVJfU0VRVUVOQ0VSLmFkbWluIiwiQU9ORV9GSU5BTkNFX0xFREdFUlMud3JpdGUiLCJBT05FX0ZJTkFOQ0VfTEVER0VSU19UUkFOU0FDVElPTlMucmVhZCIsIkFPTkVfQ09ORklHU19aT05FUy53cml0ZSIsIkFPTkVfT1BTX1BJQ0tVUC1SRVFVRVNULnBpY2t1cCIsIkFPTkVfT1BTX1BJQ0tVUC1SRVFVRVNULmFkbWluIiwiQU9ORV9OT1RJRklDQVRJT05TX1NNU19SVUxFUy5hZG1pbiIsIkFPTkVfU0VUVElOR1NfUkVTT1VSQ0VTLmNoZWNrLXVwZ3JhZGUiLCJBT05FX01NLmFkbWluIiwiQU9ORV9GSU5BTkNFX0xFREdFUlNfQ09MTEVDVElPTlMucmVhZCIsIkFPTkVfT1BTLmFkbWluIiwiQU9ORV9USElSRC1QQVJUWS53cml0ZSIsIkFPTkVfVEhJUkQtUEFSVFlfT1JERVJTLndyaXRlIiwiQU9ORV9JQU1fR1JPVVBTLndyaXRlIiwiQU9ORV9GSU5BTkNFX0NIQVJHRVMud3JpdGUiLCJBT05FX09QU19EUklWRVJTLnJlYWQiLCJBT05FX09QU19TT1JUSU5HLU1BQ0hJTkVfQUdFTlRTLnJlYWQiLCJBT05FX0lBTV9ST0xFUy53cml0ZSIsIkFPTkVfQ09ORklHU19BRERSRVNTRVMud3JpdGUiLCJBT05FX09QU19DT1VSSUVSUy53cml0ZSIsIkFPTkVfRklOQU5DRV9MRURHRVJTLnJlYWQiXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGF0dHJpYnV0ZXMgZW1haWwiLCJzaWQiOiJhMDBkYzVjZS01MWQ1LTQ0N2UtYmJkNC1hYjY0MzRiNTBhZDciLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6IlpoaXNlbiBMaSIsImF0dHJpYnV0ZXMiOnsiYXJlYXMiOlsiU0FVLGFsbCIsIktXVCxhbGwiLCJRQVQsYWxsIiwiQkhSLGFsbCIsIkFSRSxhbGwiLCJDSE4sYWxsIl0sImFsaWFzSHViQ29kZSI6IkFFSkFNMDFXIiwiZW1wbG95ZWVDb2RlIjoiNDAwMTIifSwicHJlZmVycmVkX3VzZXJuYW1lIjoiNDAwMTIiLCJnaXZlbl9uYW1lIjoiWmhpc2VuIiwiZmFtaWx5X25hbWUiOiJMaSIsImVtYWlsIjoiemhpc2VuLmxpQGFqLWV4LmNvbSJ9.JeXSn1FKcjRGT2mz3Cw5T5cZVvPPax3W7K_0myFmIbBPpLnELWfxr6V7o3uIu4NLEvaNPBS0HwdO5MeqpzSKNPorDDcCKKr7Jsxfyy5tulbmDVSQp8uBTGVM0Dm72DdMqp4tIR0RxmELT1Qy3PrPRwJFARnp33LqlaOqn60a_eUVqVYe1gejnMUxuvCQY1yiBuDoS7y2UWM67BIFL62DrQ33F9ff5_iYHxxd6wHIcZC9eyuRQgWV90deh9khSo9UqD0MN1u2KffRib2k-GLI7Tv3zSHU4B6KT1ugp3ksPeownr04XUJjOqP1ZVAyjlyCVMBC1IGMEoklul_tSb_xHA";
    public static void main(String[] args) throws Exception {


        // 批量 POST reconcile 接口（一次性提交所有 trackingIds）
        String reconcileUrl = "https://api-aone.aj-ex.com/orders/api/v1/consignments/reconcile";
        HttpHeaders postHeaders = new HttpHeaders();
        postHeaders.setContentType(MediaType.APPLICATION_JSON);
        postHeaders.setAccept(List.of(MediaType.ALL));
        postHeaders.setBearerAuth(BEARER_TOKEN);

        RestTemplate restTemplate = new RestTemplate();
       // 将所有 trackingId 一次性作为 List 传递
        HttpEntity<List<String>> postRequest = new HttpEntity<>(trackingIds, postHeaders);

        try {
            ResponseEntity<String> postResponse = restTemplate.postForEntity(reconcileUrl, postRequest, String.class);
            if (postResponse.getStatusCode().is2xxSuccessful()) {
                System.out.println("Reconcile success.");
            } else {
                System.err.println("Reconcile failed: " + postResponse.getStatusCode());
            }
        } catch (Exception e) {
            System.err.println("Reconcile error: " + e.getMessage());
        }


        Map<String, String> resultMap = new HashMap<>();
        for (String trackingId : trackingIds) {
            String deleteUrl = "https://api-aone.aj-ex.com/ops/api/v1/consignments/cache/" + trackingId;
            HttpHeaders deleteHeaders = new HttpHeaders();
            deleteHeaders.setAccept(List.of(MediaType.ALL));
            deleteHeaders.setBearerAuth(BEARER_TOKEN);

            HttpEntity<Void> deleteRequest = new HttpEntity<>(deleteHeaders);

            try {
                ResponseEntity<Void> deleteResponse = restTemplate.exchange(deleteUrl, HttpMethod.DELETE, deleteRequest, Void.class);
                if (deleteResponse.getStatusCode().is2xxSuccessful()) {
                    resultMap.put(trackingId, "Cache cleared");
                } else {
                    resultMap.put(trackingId, "Delete failed: " + deleteResponse.getStatusCode());
                }
            } catch (Exception e) {
                resultMap.put(trackingId, "Error: " + e.getMessage());
            }
        }
        System.err.println("===============================================================" );
        resultMap.forEach((trackingId, value) -> {
            System.out.println(trackingId + " -- " + value);
        });
    }
}
